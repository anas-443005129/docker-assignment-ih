name: Build, Push, and Deploy (Azure VM)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_FE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-frontend
      IMAGE_BE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-backend
    steps:
      - uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push FRONTEND
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FE }}:${{ github.sha }}
            ${{ env.IMAGE_FE }}:latest

      - name: Build & push BACKEND
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BE }}:${{ github.sha }}
            ${{ env.IMAGE_BE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Upload compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.SSH_USER }}/app"

      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            cd /home/${{ secrets.SSH_USER }}/app
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > .env
            echo "TAG=${{ github.sha }}" >> .env
            docker compose pull
            docker compose up -d --remove-orphans
            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"
