name: Build, Push and Deploy to Azure VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  REGISTRY_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_FE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-frontend
  IMAGE_BE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-backend
  TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Build & push FRONTEND
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FE }}:${{ env.TAG }}
            ${{ env.IMAGE_FE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push BACKEND
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BE }}:${{ env.TAG }}
            ${{ env.IMAGE_BE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - uses: actions/checkout@v4

      # Upload prod compose file
      - name: Upload compose (prod) to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source:   "deploy/docker-compose.prod.yml"
          target:   "/home/${{ secrets.SSH_USER }}/app"
          overwrite: true

      # Deploy via SSH
      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            mkdir -p /home/${{ secrets.SSH_USER }}/app
            cd /home/${{ secrets.SSH_USER }}/app
            # write/update .env for compose
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > .env
            echo "TAG=${{ github.sha }}" >> .env
            mv deploy/docker-compose.prod.yml docker-compose.yml || true
            docker compose pull
            docker compose up -d --remove-orphans
            docker compose ps
