name: CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_FE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-frontend
  IMAGE_BE: ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Important: use the container driver so GHA cache works
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push FRONTEND
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_FE }}:${{ github.sha }}
            ${{ env.IMAGE_FE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push BACKEND
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BE }}:${{ github.sha }}
            ${{ env.IMAGE_BE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy compose to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: docker-compose.yml
          target: /home/${{ secrets.SSH_USER }}/app

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            cd /home/${{ secrets.SSH_USER }}/app

            # set env for compose (.env read by docker-compose.yml)
            printf "DOCKERHUB_USERNAME=%s\nTAG=%s\n" \
              "${{ secrets.DOCKERHUB_USERNAME }}" "${{ github.sha }}" > .env

            # --- free the ports & stop old stacks ---
            docker ps --filter "publish=3000" -q | xargs -r docker rm -f
            docker ps --filter "publish=3001" -q | xargs -r docker rm -f
            docker compose -p docker-assignment-ih down || true
            docker compose -p app down || true

            # --- deploy ---
            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker compose pull
            docker compose up -d --force-recreate --remove-orphans
            docker compose ps

